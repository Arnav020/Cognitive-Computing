# -*- coding: utf-8 -*-
"""Assignment2_Cognitive.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iYqHHin6ttNhcWY5_eo-IXbxsSqFRPSQ
"""

#Question 1
# (i)
L=[10, 20, 30, 40, 50, 60, 70, 80]
L.extend([200,300])
print("(i) New list:",L)

#(ii)
L.remove(10)
L.remove(30)
print("(ii) New list:",L)

#(iii)
L.sort()
print("(iii) New list:",L)

#(iv)
L.sort(reverse=True)
print("(iv) New list:",L)

#Question 2
# (i)
scores = (45, 89.5, 76, 45.4, 89, 92, 58, 45)
max_score=max(scores)
max_index=scores.index(max_score)
print("(i) Maximum score:",max_score)
print("Index of maximum score:",max_index)

#(ii)
min_score = min(scores)
min_index = scores.count(min_score)
print("Lowest score:", min_score)
print("Count of lowest score:", min_index)

#(iii)
reverse_s=list(scores[::-1])
print("Reverse List: ",reverse_s)

#(iv)
specific_score = float(input("Enter a specific score to check: "))
if specific_score in scores:
    first = scores.index(specific_score)
    print(f"Score {specific_score} is present at index {first}.")
else:
    print(f"Score {specific_score} is not present in the tuple.")

#Question 3:
import random

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True


random_no = [random.randint(100, 900) for _ in range(100)]


prime_no = [i for i in random_no if is_prime(i)]
print("Prime numbers:", prime_no)
print("Count of prime numbers:", len(prime_no))

odd_numbers = [num for num in random_no if num % 2 != 0]
print("Odd numbers:", odd_numbers)
print("Count of odd numbers:", len(odd_numbers))

even_numbers = [num for num in random_no if num % 2 == 0]
print("Even numbers:", even_numbers)
print("Count of even numbers:", len(even_numbers))

#Question 4:
A = {34, 56, 78, 90}
B = {78, 45, 90, 23}

unique=A.union(B)
print("Unique Scores: ",unique)

common=A.intersection(B)
print("Common Scores: ",common)

exclusive=A.symmetric_difference(B)
print("Excluisve Scores: ",exclusive)

is_subset=A.issubset(B)
is_superset=B.issuperset(A)
print("Is A subset of B: ",is_subset)
print("Is B subset of A: ",is_superset)

x=int(input("Enter the score u want to remove: "))
if x in A:
  A.remove(x)
else:
  print("Score not found")

print("Updated scores of A: ",A)

#Question 5:
sample_dict={
    "name":"Kelly",
    "age":25,
    "salary":8000,
    "city":"New York"
}

sample_dict["location"]=sample_dict.pop("city")

print("Updated dictionary: ",sample_dict)

